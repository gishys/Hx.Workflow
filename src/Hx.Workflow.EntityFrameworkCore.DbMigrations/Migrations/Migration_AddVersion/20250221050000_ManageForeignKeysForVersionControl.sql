-- 简化版本控制外键管理脚本
-- 只处理需要版本控制的外键约束
-- 注意：ExePointerCandidate 不需要版本控制，所以不处理 HXPOINTER_CANDIDATES

DO $$
DECLARE
    fk_record RECORD;
BEGIN
    RAISE NOTICE '开始管理版本控制相关的外键约束...';
    
    -- 1. 删除需要转换为复合外键的约束
    RAISE NOTICE '删除需要修改的外键约束...';
    
    -- 删除 HXWKNODES 引用 HXWKDEFINITIONS 的外键
    IF EXISTS (SELECT 1 FROM information_schema.table_constraints 
               WHERE constraint_name = 'FK_WKNODES_WKDEFINITION_COMPOSITE' 
               AND table_name = 'HXWKNODES') THEN
        ALTER TABLE "HXWKNODES" DROP CONSTRAINT "FK_WKNODES_WKDEFINITION_COMPOSITE";
        RAISE NOTICE '删除约束: HXWKNODES.FK_WKNODES_WKDEFINITION_COMPOSITE';
    END IF;
    
    -- 删除 HXDEFINITION_CANDIDATES 引用 HXWKDEFINITIONS 的外键
    IF EXISTS (SELECT 1 FROM information_schema.table_constraints 
               WHERE constraint_name = 'FK_DEFINITION_CANDIDATES_WKDEFINITION_COMPOSITE' 
               AND table_name = 'HXDEFINITION_CANDIDATES') THEN
        ALTER TABLE "HXDEFINITION_CANDIDATES" DROP CONSTRAINT "FK_DEFINITION_CANDIDATES_WKDEFINITION_COMPOSITE";
        RAISE NOTICE '删除约束: HXDEFINITION_CANDIDATES.FK_DEFINITION_CANDIDATES_WKDEFINITION_COMPOSITE';
    END IF;
    
    -- 删除 HXNODE_CANDIDATES 引用 HXWKNODES 的外键
    IF EXISTS (SELECT 1 FROM information_schema.table_constraints 
               WHERE constraint_name = 'FK_NODE_CANDIDATES_WKNODE_COMPOSITE' 
               AND table_name = 'HXNODE_CANDIDATES') THEN
        ALTER TABLE "HXNODE_CANDIDATES" DROP CONSTRAINT "FK_NODE_CANDIDATES_WKNODE_COMPOSITE";
        RAISE NOTICE '删除约束: HXNODE_CANDIDATES.FK_NODE_CANDIDATES_WKNODE_COMPOSITE';
    END IF;
    
    -- 删除 HX_NODES_APPLICATION_FORMS 引用 HXWKNODES 的外键
    IF EXISTS (SELECT 1 FROM information_schema.table_constraints 
               WHERE constraint_name = 'FK_NODES_APPLICATION_FORMS_WKNODE_COMPOSITE' 
               AND table_name = 'HX_NODES_APPLICATION_FORMS') THEN
        ALTER TABLE "HX_NODES_APPLICATION_FORMS" DROP CONSTRAINT "FK_NODES_APPLICATION_FORMS_WKNODE_COMPOSITE";
        RAISE NOTICE '删除约束: HX_NODES_APPLICATION_FORMS.FK_NODES_APPLICATION_FORMS_WKNODE_COMPOSITE';
    END IF;
    
    -- 删除 HXWKINSTANCES 引用 HXWKDEFINITIONS 的外键
    IF EXISTS (SELECT 1 FROM information_schema.table_constraints 
               WHERE constraint_name = 'FK_WKINSTANCES_WKDEFINITION_COMPOSITE' 
               AND table_name = 'HXWKINSTANCES') THEN
        ALTER TABLE "HXWKINSTANCES" DROP CONSTRAINT "FK_WKINSTANCES_WKDEFINITION_COMPOSITE";
        RAISE NOTICE '删除约束: HXWKINSTANCES.FK_WKINSTANCES_WKDEFINITION_COMPOSITE';
    END IF;
    
    RAISE NOTICE '外键约束删除完成';
    
    -- 2. 确保 HXWKNODES 有复合主键
    RAISE NOTICE '检查并创建 HXWKNODES 复合主键...';
    
    -- 先删除现有的主键约束（如果存在）
    IF EXISTS (SELECT 1 FROM information_schema.table_constraints 
               WHERE table_name = 'HXWKNODES' 
               AND constraint_type = 'PRIMARY KEY') THEN
        -- 获取现有主键约束名称
        FOR fk_record IN
            SELECT constraint_name 
            FROM information_schema.table_constraints 
            WHERE table_name = 'HXWKNODES' 
            AND constraint_type = 'PRIMARY KEY'
        LOOP
            EXECUTE 'ALTER TABLE "HXWKNODES" DROP CONSTRAINT "' || fk_record.constraint_name || '" CASCADE';
            RAISE NOTICE '删除现有主键约束: %', fk_record.constraint_name;
        END LOOP;
    END IF;
    
    -- 创建复合主键
    ALTER TABLE "HXWKNODES" ADD CONSTRAINT "PK_WKNODES" PRIMARY KEY ("ID", "VERSION");
    RAISE NOTICE '为 HXWKNODES 创建复合主键 (ID, VERSION)';
    
    -- 3. 重建复合外键约束
    RAISE NOTICE '开始重建复合外键约束...';
    
    -- 重建 HXWKNODES 引用 HXWKDEFINITIONS 的外键
    ALTER TABLE "HXWKNODES" 
    ADD CONSTRAINT "FK_WKNODES_WKDEFINITION_COMPOSITE" 
    FOREIGN KEY ("WKDIFINITIONID", "VERSION") 
    REFERENCES "HXWKDEFINITIONS" ("ID", "VERSION");
    RAISE NOTICE '重建约束: HXWKNODES.FK_WKNODES_WKDEFINITION_COMPOSITE -> HXWKDEFINITIONS.ID';
    
    -- 重建 HXDEFINITION_CANDIDATES 引用 HXWKDEFINITIONS 的外键
    ALTER TABLE "HXDEFINITION_CANDIDATES" 
    ADD CONSTRAINT "FK_DEFINITION_CANDIDATES_WKDEFINITION_COMPOSITE" 
    FOREIGN KEY ("NODEID", "VERSION") 
    REFERENCES "HXWKDEFINITIONS" ("ID", "VERSION");
    RAISE NOTICE '重建约束: HXDEFINITION_CANDIDATES.FK_DEFINITION_CANDIDATES_WKDEFINITION_COMPOSITE -> HXWKDEFINITIONS.ID';
    
    -- 重建 HXNODE_CANDIDATES 引用 HXWKNODES 的外键
    ALTER TABLE "HXNODE_CANDIDATES" 
    ADD CONSTRAINT "FK_NODE_CANDIDATES_WKNODE_COMPOSITE" 
    FOREIGN KEY ("NODEID", "VERSION") 
    REFERENCES "HXWKNODES" ("ID", "VERSION");
    RAISE NOTICE '重建约束: HXNODE_CANDIDATES.FK_NODE_CANDIDATES_WKNODE_COMPOSITE -> HXWKNODES.ID';
    
    -- 重建 HX_NODES_APPLICATION_FORMS 引用 HXWKNODES 的外键
    ALTER TABLE "HX_NODES_APPLICATION_FORMS" 
    ADD CONSTRAINT "FK_NODES_APPLICATION_FORMS_WKNODE_COMPOSITE" 
    FOREIGN KEY ("NODE_ID", "VERSION") 
    REFERENCES "HXWKNODES" ("ID", "VERSION");
    RAISE NOTICE '重建约束: HX_NODES_APPLICATION_FORMS.FK_NODES_APPLICATION_FORMS_WKNODE_COMPOSITE -> HXWKNODES.ID';
    
    -- 重建 HXWKINSTANCES 引用 HXWKDEFINITIONS 的外键
    ALTER TABLE "HXWKINSTANCES" 
    ADD CONSTRAINT "FK_WKINSTANCES_WKDEFINITION_COMPOSITE" 
    FOREIGN KEY ("WKDIFINITIONID", "VERSION") 
    REFERENCES "HXWKDEFINITIONS" ("ID", "VERSION");
    RAISE NOTICE '重建约束: HXWKINSTANCES.FK_WKINSTANCES_WKDEFINITION_COMPOSITE -> HXWKDEFINITIONS.ID';
    
    RAISE NOTICE '复合外键约束重建完成';
    
    -- 4. 验证结果
    RAISE NOTICE '验证外键约束...';
    
    -- 检查关键外键是否存在
    IF NOT EXISTS (SELECT 1 FROM information_schema.table_constraints 
                   WHERE constraint_name = 'FK_WKNODES_WKDEFINITION_COMPOSITE' 
                   AND table_name = 'HXWKNODES') THEN
        RAISE EXCEPTION 'HXWKNODES 复合外键创建失败';
    END IF;
    
    IF NOT EXISTS (SELECT 1 FROM information_schema.table_constraints 
                   WHERE constraint_name = 'FK_DEFINITION_CANDIDATES_WKDEFINITION_COMPOSITE' 
                   AND table_name = 'HXDEFINITION_CANDIDATES') THEN
        RAISE EXCEPTION 'HXDEFINITION_CANDIDATES 复合外键创建失败';
    END IF;
    
    RAISE NOTICE '版本控制外键管理完成';
    
EXCEPTION
    WHEN OTHERS THEN
        RAISE EXCEPTION '外键管理过程中发生错误: %', SQLERRM;
END $$; 